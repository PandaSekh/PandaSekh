<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Comments on Alessio Franceschi</title><link>https://alessiofranceschi.dev/categories/comments/</link><description>Recent content in Comments on Alessio Franceschi</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Copyright Alessio Franceschi</copyright><lastBuildDate>Sat, 09 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://alessiofranceschi.dev/categories/comments/index.xml" rel="self" type="application/rss+xml"/><item><title>NextJS Free Commenting System using Github [Part 2/2]</title><link>https://alessiofranceschi.dev/blog/nextjs-free-commenting-system-part-2/</link><pubDate>Sat, 09 Oct 2021 00:00:00 +0000</pubDate><guid>https://alessiofranceschi.dev/blog/nextjs-free-commenting-system-part-2/</guid><description>In the previous article we built the basic interface for our commenting system. Now we need to program the API endpoints to communicate with Github&amp;rsquo;s API in order to save and retrieve the comments.
Table Of Contents Save Comments Prepare the data Merge parent and child comments Update the data Full API method Get Comments Save Comments Let&amp;rsquo;s start by saving some comment. In the pages/api path, let&amp;rsquo;s create a new folder named comments, inside of which we&amp;rsquo;ll create another folder named save and finally inside that a file named [slug].</description></item><item><title>NextJS Free Commenting System using Github [Part 1/2]</title><link>https://alessiofranceschi.dev/blog/nextjs-free-commenting-system-part-1/</link><pubDate>Fri, 08 Oct 2021 00:00:00 +0000</pubDate><guid>https://alessiofranceschi.dev/blog/nextjs-free-commenting-system-part-1/</guid><description>In a recent project of mine built with NextJS and hosted on Vercel I wanted to implement a simple but functional commenting system. While I already did a commenting system, it was using an external CMS (Sanity.io). Sanity is great, but for this project I had two different goals:
I wanted it to be totally free, without limits I wanted total control over the data The solution I came up with was using Github as a database for the comments.</description></item></channel></rss>